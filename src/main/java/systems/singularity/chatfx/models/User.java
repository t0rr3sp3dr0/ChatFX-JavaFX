/*
 * ChatFX
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package systems.singularity.chatfx.models;

import com.google.gson.annotations.SerializedName;

import java.util.Objects;

/**
 * User
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-07-03T19:39:03.681Z")
public class User {
  @SerializedName("id")
  private Integer id = null;

  @SerializedName("username")
  private String username = null;

  @SerializedName("password")
  private String password = null;

  @SerializedName("address")
  private String address = null;

  @SerializedName("portChat")
  private Integer portChat = null;

  @SerializedName("portFile")
  private Integer portFile = null;

  @SerializedName("portRtt")
  private Integer portRtt = null;

  @SerializedName("status")
  private Boolean status = null;

  public User id(Integer id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   *
   * @return id
   **/
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public User username(String username) {
    this.username = username;
    return this;
  }

  /**
   * Get username
   *
   * @return username
   **/
  public String getUsername() {
    return username;
  }

  public void setUsername(String username) {
    this.username = username;
  }

  public User password(String password) {
    this.password = password;
    return this;
  }

  /**
   * Get password
   *
   * @return password
   **/
  public String getPassword() {
    return password;
  }

  public void setPassword(String password) {
    this.password = password;
  }

  public User address(String address) {
    this.address = address;
    return this;
  }

  /**
   * Get address
   *
   * @return address
   **/
  public String getAddress() {
    return address;
  }

  public void setAddress(String address) {
    this.address = address;
  }

  public User portChat(Integer portChat) {
    this.portChat = portChat;
    return this;
  }

  /**
   * Get portChat
   *
   * @return portChat
   **/
  public Integer getPortChat() {
    return portChat;
  }

  public void setPortChat(Integer portChat) {
    this.portChat = portChat;
  }

  public User portFile(Integer portFile) {
    this.portFile = portFile;
    return this;
  }

  /**
   * Get portFile
   * @return portFile
   **/
  public Integer getPortFile() {
    return portFile;
  }

  public void setPortFile(Integer portFile) {
    this.portFile = portFile;
  }

  public User portRtt(Integer portRtt) {
    this.portRtt = portRtt;
    return this;
  }

  /**
   * Get portRtt
   * @return portRtt
   **/
  public Integer getPortRtt() {
    return portRtt;
  }

  public void setPortRtt(Integer portRtt) {
    this.portRtt = portRtt;
  }

  public User status(Boolean status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   **/
  public Boolean getStatus() {
    return status;
  }

  public void setStatus(Boolean status) {
    this.status = status;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    User user = (User) o;
    return Objects.equals(this.id, user.id) &&
            Objects.equals(this.username, user.username) &&
            Objects.equals(this.password, user.password) &&
            Objects.equals(this.address, user.address) &&
            Objects.equals(this.portChat, user.portChat) &&
            Objects.equals(this.portFile, user.portFile) &&
            Objects.equals(this.portRtt, user.portRtt) &&
            Objects.equals(this.status, user.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, username, password, address, portChat, portFile, portRtt, status);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class User {\n");

    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    portChat: ").append(toIndentedString(portChat)).append("\n");
    sb.append("    portFile: ").append(toIndentedString(portFile)).append("\n");
    sb.append("    portRtt: ").append(toIndentedString(portRtt)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

